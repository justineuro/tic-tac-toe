#!/bin/bash
#
# Title: TICTACTOE ... the GAME! (For two players, x and o.)
# Filename: t3 
# Usage: At the prompt, /bin/bash /path/to/t3  or /path/to/t3 
# Author: JLA Uro (justineuro@gmail.com)
# Date:  11 February 2014 (Feast of Our Lady of Lourdes)
# Revised: 13Feb2014, 02Sep2018
#
###
##
#
echo ""
echo "TICTACTOE  ... the GAME!"
echo "For 2 players: x and o.  First x, then o."
winsx=0
winso=0
ngames=0
while true
do
  ngames=`expr $ngames + 1`
  declare -a sq                            # declare sq an array
  sq=(1 2 3 4 5 6 7 8 9)                   # initial sqaare numbers in sq  
  echo ""
  echo "Current Grid:"                     # echo modified grid
  echo "-------------"
  echo "| ${sq[0]} | ${sq[1]} | ${sq[2]} |"    
  echo "-------------"
  echo "| ${sq[3]} | ${sq[4]} | ${sq[5]} |"
  echo "-------------"      
  echo "| ${sq[6]} | ${sq[7]} | ${sq[8]} |"
  echo "-------------"
  echo ""
  win=0                                    # win indicator
  i=1                                      # input i = 1
  winx="x x x"                             # def win x pattern
  wino="o o o"                             # def win o pattern
  while [ $win -eq 0 ]                     # while no win yet
  do
    echo "Status of squares: ${sq[*]}"   # print current sqs statuses
    sqNox=`echo ${sq[*]#x*}`
    sqNoxo=`echo ${sqNox//o/''}`
    rtChoice=0
    while [ $rtChoice -eq 0 ]
    do
      entryCode=0
      while [ "$entryCode" -eq 0 ];  
      do
        echo "Remaining squares: $sqNoxo" # print available sq choices
        if [ `expr $i % 2` != 0 ];  then
          echo "Entry for x?"  
				else
					echo "Entry for o?"
				fi
        read entry                        # input player's ith square (x,o/odd,even i)
        # verify {1..9}
        if [ "$entry" = "1" -o  "$entry" = 2 -o "$entry" = "3" -o  "$entry" = "4" -o "$entry" = "5" -o  "$entry" = "6" -o "$entry" = "7" -o  "$entry" = "8" -o "$entry" = "9" ]; then
          entryCode=1
		    else            
		      echo "You entered \"$entry\".  Entry error.  Pls. re-enter ..."
		      entryCode=0
			  fi
      done
      # verify non-FILLED status of choice              
      if [ "${sq[${entry}-1]}" = "x" -o "${sq[${entry}-1]}" = "o"  ]; then  
        echo "Square ${entry} is already FILLED!!!"               
      else
        rtChoice=1
      fi
    done
    if [ `expr $i % 2` != 0 ];  then       # player x input; steps 1,3,5,7,9
      sq[${entry}-1]="x"                   # asign "x" to choice entry
      echo ""
      echo "Current Grid:"                 # echo modified grid
      echo "-------------"
      echo "| ${sq[0]} | ${sq[1]} | ${sq[2]} |"    
      echo "-------------"
      echo "| ${sq[3]} | ${sq[4]} | ${sq[5]} |"
      echo "-------------"      
      echo "| ${sq[6]} | ${sq[7]} | ${sq[8]} |"
      echo "-------------"
      echo ""
      wr1="${sq[0]} ${sq[1]} ${sq[2]}"     # determine 8 relevant patterns
      wr2="${sq[3]} ${sq[4]} ${sq[5]}"
      wr3="${sq[6]} ${sq[7]} ${sq[8]}"
      wc1="${sq[0]} ${sq[3]} ${sq[6]}"
      wc2="${sq[1]} ${sq[4]} ${sq[7]}"
      wc3="${sq[2]} ${sq[5]} ${sq[8]}"
      wd1="${sq[0]} ${sq[4]} ${sq[8]}"
      wd2="${sq[2]} ${sq[4]} ${sq[6]}"     # compare 8 relevant patterns to winx patterns
      if [ "$wr1" = "$winx" -o "$wr2"  = "$winx" -o "$wr3" = "$winx" ]; then 
        echo "hooorrrray!!! ... x wins!!!" # print win message
        echo ""
        win=															# set win var to 1 to end curr game
        winsx=`expr $winsx + 1`                      
      elif [ "$wc1" = "$winx" -o "$wc2" = "$winx" -o "$wc3" = "$winx" -o "$wd1" = "$winx" -o "$wd2" = "$winx" ]; then
        echo "hooorrrray!!! ... x wins!!!"
        echo ""
        win=1
        winsx=`expr $winsx + 1`
      fi
      i=`expr $i + 1`                      # increment step i 
      if [ $i -ge 10 -a $win = 0 ]; then   # game ends in 9 or less steps 
        echo "No winner! ... "
        echo ""
        win=1                              # let win=1 to end curr game
      fi
    else                                   
      sq[${entry}-1]="o"                   # player o input; steps 2,4,6,8
      echo ""
      echo "Current Grid:"                 # echo modified grid
      echo "-------------"
      echo "| ${sq[0]} | ${sq[1]} | ${sq[2]} |"    
      echo "-------------"
      echo "| ${sq[3]} | ${sq[4]} | ${sq[5]} |"
      echo "-------------"      
      echo "| ${sq[6]} | ${sq[7]} | ${sq[8]} |"
      echo "-------------"
      echo ""
      wr1="${sq[0]} ${sq[1]} ${sq[2]}"
      wr2="${sq[3]} ${sq[4]} ${sq[5]}"
      wr3="${sq[6]} ${sq[7]} ${sq[8]}"
      wc1="${sq[0]} ${sq[3]} ${sq[6]}"
      wc2="${sq[1]} ${sq[4]} ${sq[7]}"
      wc3="${sq[2]} ${sq[5]} ${sq[8]}"
      wd1="${sq[0]} ${sq[4]} ${sq[8]}"
      wd2="${sq[2]} ${sq[4]} ${sq[6]}"
      if [ "$wr1" = "$wino" -o "$wr2"  = "$wino" -o "$wr3" = "$wino" ]; then
        echo "hooorrrray!!! ... o wins!!!"
        echo ""
        win=1
        winso=`expr $winso + 1`
      elif [ "$wc1" = "$wino" -o "$wc2" = "$wino" -o "$wc3" = "$wino" -o "$wd1" = "$wino" -o "$wd2" = "$wino" ]; then
        echo "hooorrrray!!! ... o wins!!!"
        echo ""
        win=1
        winso=`expr $winso + 1`
      fi
      i=`expr $i + 1`                      # increment step i 
    fi
  done 
  echo "Current score:"
  echo "  Total games played: $ngames"
  echo "  x wins: $winsx"
  echo "  o wins: $winso"
  echo " no wins: `expr $ngames - $winsx - $winso`"
  echo "Another game?[Y/n]"
  read no
  if [ "$no" = "n" -o "$no" = "N" -o "$no" = "no" -o "$no" = "No" ]; then 
    echo ""
    echo "Here's hoping you enjoyed TICTACTOE ... the GAME!"
    echo "Try it again soon!"
    echo "THANK YOU!!!"
    exit 
  else
    echo "****************"
    echo "*** New Game ***"
    echo "****************"
  fi
done
#
##
###

